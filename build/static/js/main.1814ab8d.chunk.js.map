{"version":3,"sources":["store/users/reducer.js","store/users/actionTypes.js","store/index.js","components/UserForm.js","containers/UserFormContainer.js","store/users/actions.js","components/EditUserForm.js","containers/EditUserFormContainer.js","components/TableComponent.js","containers/TableContainer.js","pages/TablePage.js","pages/App.js","index.js"],"names":["initialState","users","total","loading","error","usersHandler","_usersHandler","Object","defineProperty","state","objectSpread","_ref","map","user","key","uuid","_ref2","store","createStore","combineReducers","arguments","length","undefined","action","type","applyMiddleware","thunk","Form","create","form","addNewUser","_getSubmitBtnRef","_toggleModal","_getData","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","react_default","a","createElement","es_form","assign","onSubmit","e","preventDefault","validateFields","err","formData","then","toast","success","catch","Item","label","rules","required","message","input","Password","es_button","htmlType","className","ref","mapDispatchToProps","userData","_ref4","asyncToGenerator","regenerator_default","mark","_callee4","dispatch","wrap","_context4","prev","next","axios","post","headers","Content-Type","stop","_x5","apply","this","connect","UserForm","CustomForm","mapPropsToFields","props","_props$record","record","name","email","createFormField","value","updateUser","_getUpdateBtnRef","data","EditUserForm","_ref3","_callee3","password","objectId","_context3","put","concat","_x4","TableComponent","deleteUser","fetchUsers","getTotal","_useState","useState","_useState2","slicedToArray","visible","_setVisible","_useState3","_useState4","showEdit","_setShowEdit","_useState5","_useState6","submitBtnRef","_setSubmitBtnRef","_useState7","_useState8","updateBtnRef","_setUpdateBtnRef","_useState9","_useState10","searchInputRef","_setSearchInputRef","_useState11","_useState12","_setRecord","_getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","node","placeholder","onChange","target","onPressEnter","onClick","icon","size","filterIcon","filtered","style","color","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","columns","title","render","text","divider","popconfirm","onConfirm","_deleteUser","okText","cancelText","useEffect","table","dataSource","pagination","pageSize","modal","onCancel","footer","buttonNode","click","EditUserFormContainer","UserFormContainer","id","_ref5","_callee5","_context5","delete","_x6","_callee","getState","_getState","_context","get","params","res","_x","_x2","_callee2","_context2","_x3","TablePage","TableContainer","App","Helmet","charSet","pages_TablePage","es","src_pages_App","document","getElementById"],"mappings":"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","file":"static/js/main.1814ab8d.chunk.js","sourcesContent":["import * as ActionTypes from './actionTypes'\r\nimport uuid from 'uuid'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    total: 0,\r\n    loading: false,\r\n    error: false,\r\n}\r\n\r\nconst usersHandler = {\r\n    [ActionTypes.FETCH_USERS_REQUEST](state) {\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.FETCH_USERS_SUCCESS](state, { users }) {\r\n        return {\r\n            ...state,\r\n            users: users.map(user => {\r\n                return { ...user, key: uuid() }\r\n            }),\r\n            loading: false,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.FETCH_USERS_FAILURE](state) {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: true,\r\n        }\r\n    },\r\n    [ActionTypes.GET_TOTAL_REQUEST](state) {\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.GET_TOTAL_SUCCESS](state, { total }) {\r\n        return {\r\n            ...state,\r\n            total,\r\n            loading: false,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.GET_TOTAL_FAILURE](state) {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: true,\r\n        }\r\n    },\r\n    [ActionTypes.ADD_NEW_USER_REQUEST](state) {\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.ADD_NEW_USER_SUCCESS](state) {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.ADD_NEW_USER_FAILURE](state) {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: true,\r\n        }\r\n    },\r\n    [ActionTypes.UPDATE_USER_REQUEST](state) {\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.UPDATE_USER_SUCCESS](state) {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.UPDATE_USER_FAILURE](state) {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: true,\r\n        }\r\n    },\r\n    [ActionTypes.DELETE_USER_REQUEST](state) {\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.DELETE_USER_SUCCESS](state) {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.DELETE_USER_FAILURE](state) {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: true,\r\n        }\r\n    },\r\n}\r\n\r\nexport default (state = initialState, action) =>\r\n    usersHandler[action.type] ? usersHandler[action.type](state, action) : state\r\n","export const FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST'\r\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS'\r\nexport const FETCH_USERS_FAILURE = 'FETCH_USERS_FAILURE'\r\n\r\nexport const GET_TOTAL_REQUEST = 'GET_TOTAL_REQUEST'\r\nexport const GET_TOTAL_SUCCESS = 'GET_TOTAL_SUCCESS'\r\nexport const GET_TOTAL_FAILURE = 'GET_TOTAL_FAILURE'\r\n\r\nexport const ADD_NEW_USER_REQUEST = 'ADD_NEW_USER_REQUEST'\r\nexport const ADD_NEW_USER_SUCCESS = 'ADD_NEW_USER_SUCCESS'\r\nexport const ADD_NEW_USER_FAILURE = 'ADD_NEW_USER_FAILURE'\r\n\r\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST'\r\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\r\nexport const UPDATE_USER_FAILURE = 'UPDATE_USER_FAILURE'\r\n\r\nexport const DELETE_USER_REQUEST = 'DELETE_USER_REQUEST'\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS'\r\nexport const DELETE_USER_FAILURE = 'DELETE_USER_FAILURE'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport users from './users/reducer'\r\n\r\nexport const store = createStore(\r\n    combineReducers({\r\n        users,\r\n    }),\r\n    applyMiddleware(thunk)\r\n)\r\n","import React from 'react'\r\nimport { Form, Button, Input } from 'antd'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport uuid from 'uuid'\r\n\r\nconst UserForm = ({\r\n    form,\r\n    addNewUser,\r\n    _getSubmitBtnRef,\r\n    _toggleModal,\r\n    _getData,\r\n}) => {\r\n    const handleSubmit = e => {\r\n            e.preventDefault()\r\n            form.validateFields((err, formData) => {\r\n                if (!err) {\r\n                    formData.key = uuid()\r\n                    addNewUser(formData)\r\n                        .then(() => {\r\n                            _toggleModal()\r\n                            _getData()\r\n                            toast.success('New User is Added!')\r\n                        })\r\n                        .catch(err => toast.error(err))\r\n                }\r\n            })\r\n        },\r\n        { getFieldDecorator } = form,\r\n        formItemLayout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 14 },\r\n        }\r\n\r\n    return (\r\n        <Form {...formItemLayout} onSubmit={handleSubmit}>\r\n            <Form.Item {...formItemLayout} label=\"Name\">\r\n                {getFieldDecorator('name', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your name',\r\n                            type: 'string',\r\n                        },\r\n                    ],\r\n                })(<Input />)}\r\n            </Form.Item>\r\n            <Form.Item {...formItemLayout} label=\"Email\">\r\n                {getFieldDecorator('email', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input valid email',\r\n                            type: 'email',\r\n                        },\r\n                    ],\r\n                })(<Input />)}\r\n            </Form.Item>\r\n            <Form.Item {...formItemLayout} label=\"Password\">\r\n                {getFieldDecorator('password', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your password',\r\n                        },\r\n                    ],\r\n                })(<Input.Password />)}\r\n            </Form.Item>\r\n\r\n            <Button\r\n                htmlType=\"submit\"\r\n                className=\"hidden\"\r\n                ref={ref => _getSubmitBtnRef(ref)}\r\n            />\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Form.create()(UserForm)\r\n","import { connect } from 'react-redux'\r\n\r\nimport { addNewUser } from '../store/users/actions'\r\n\r\nimport UserForm from '../components/UserForm'\r\n\r\nconst mapDispatchToProps = {\r\n    addNewUser,\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(UserForm)\r\n","import axios from 'axios'\r\nimport * as ActionTypes from './actionTypes'\r\n\r\nexport const fetchUsers = () => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: ActionTypes.FETCH_USERS_REQUEST,\r\n    })\r\n\r\n    const {\r\n            users: { total },\r\n        } = getState(),\r\n        pageSize = total\r\n\r\n    await axios\r\n        .get(\r\n            `https://api.backendless.com/53FB6874-BEE0-9546-FFCA-1F3DEE56BE00/73E38E38-C5C9-45B2-FFB5-D05A6E16A600/data/Users`,\r\n            {\r\n                params: {\r\n                    pageSize,\r\n                },\r\n            }\r\n        )\r\n        .then(res => {\r\n            dispatch({\r\n                type: ActionTypes.FETCH_USERS_SUCCESS,\r\n                users: res.data,\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ActionTypes.FETCH_USERS_FAILURE,\r\n            })\r\n        })\r\n}\r\n\r\nexport const getTotal = () => async dispatch => {\r\n    dispatch({\r\n        type: ActionTypes.GET_TOTAL_REQUEST,\r\n    })\r\n\r\n    await axios\r\n        .get(\r\n            `https://api.backendless.com/53FB6874-BEE0-9546-FFCA-1F3DEE56BE00/73E38E38-C5C9-45B2-FFB5-D05A6E16A600/data/Users/count`\r\n        )\r\n        .then(res => {\r\n            dispatch({\r\n                type: ActionTypes.GET_TOTAL_SUCCESS,\r\n                total: res.data,\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ActionTypes.GET_TOTAL_FAILURE,\r\n            })\r\n        })\r\n}\r\n\r\nexport const updateUser = data => async dispatch => {\r\n    dispatch({\r\n        type: ActionTypes.UPDATE_USER_REQUEST,\r\n    })\r\n\r\n    const { name, email, password, objectId } = data\r\n    await axios\r\n        .put(\r\n            `https://api.backendless.com/53FB6874-BEE0-9546-FFCA-1F3DEE56BE00/73E38E38-C5C9-45B2-FFB5-D05A6E16A600/data/Users/${objectId}`,\r\n            {\r\n                name,\r\n                email,\r\n                password,\r\n            },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n        )\r\n        .then(() => {\r\n            dispatch({\r\n                type: ActionTypes.UPDATE_USER_SUCCESS,\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ActionTypes.UPDATE_USER_FAILURE,\r\n            })\r\n        })\r\n}\r\n\r\nexport const addNewUser = userData => async dispatch => {\r\n    dispatch({\r\n        type: ActionTypes.ADD_NEW_USER_REQUEST,\r\n    })\r\n\r\n    await axios\r\n        .post(\r\n            `https://api.backendless.com/53FB6874-BEE0-9546-FFCA-1F3DEE56BE00/73E38E38-C5C9-45B2-FFB5-D05A6E16A600/data/Users`,\r\n            {\r\n                ...userData,\r\n            },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n        )\r\n        .then(() => {\r\n            dispatch({\r\n                type: ActionTypes.ADD_NEW_USER_SUCCESS,\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ActionTypes.ADD_NEW_USER_FAILURE,\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteUser = id => async dispatch => {\r\n    dispatch({\r\n        type: ActionTypes.DELETE_USER_REQUEST,\r\n    })\r\n\r\n    await axios\r\n        .delete(\r\n            `https://api.backendless.com/53FB6874-BEE0-9546-FFCA-1F3DEE56BE00/73E38E38-C5C9-45B2-FFB5-D05A6E16A600/data/Users/${id}`\r\n        )\r\n        .then(() => {\r\n            dispatch({\r\n                type: ActionTypes.DELETE_USER_SUCCESS,\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ActionTypes.DELETE_USER_FAILURE,\r\n            })\r\n        })\r\n}\r\n","import React from 'react'\r\nimport { Form, Button, Input } from 'antd'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst CustomForm = Form.create({\r\n    mapPropsToFields(props) {\r\n        const {\r\n            record: { name, email },\r\n        } = props\r\n        return {\r\n            name: Form.createFormField({\r\n                ...name,\r\n                value: name,\r\n            }),\r\n            email: Form.createFormField({\r\n                ...email,\r\n                value: email,\r\n            }),\r\n        }\r\n    },\r\n})(props => {\r\n    const {\r\n            form,\r\n            updateUser,\r\n            _getUpdateBtnRef,\r\n            _getData,\r\n            _toggleModal,\r\n            record,\r\n        } = props,\r\n        { getFieldDecorator } = form,\r\n        formItemLayout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 14 },\r\n        },\r\n        handleSubmit = e => {\r\n            e.preventDefault()\r\n            form.validateFields((err, formData) => {\r\n                if (!err) {\r\n                    const data = {\r\n                        ...record,\r\n                        ...formData,\r\n                    }\r\n                    updateUser(data)\r\n                        .then(() => {\r\n                            _toggleModal()\r\n                            _getData()\r\n                            toast.success('User is Updated!')\r\n                        })\r\n                        .catch(err => toast.error(err))\r\n                }\r\n            })\r\n        }\r\n    return (\r\n        <Form {...formItemLayout} onSubmit={handleSubmit}>\r\n            <Form.Item {...formItemLayout} label=\"Name\">\r\n                {getFieldDecorator('name', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your name',\r\n                            type: 'string',\r\n                        },\r\n                    ],\r\n                })(<Input />)}\r\n            </Form.Item>\r\n            <Form.Item {...formItemLayout} label=\"Email\">\r\n                {getFieldDecorator('email', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input valid email',\r\n                            type: 'email',\r\n                        },\r\n                    ],\r\n                })(<Input />)}\r\n            </Form.Item>\r\n            <Form.Item {...formItemLayout} label=\"Password\">\r\n                {getFieldDecorator('password', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your password',\r\n                        },\r\n                    ],\r\n                })(<Input.Password />)}\r\n            </Form.Item>\r\n\r\n            <Button\r\n                htmlType=\"submit\"\r\n                className=\"hidden\"\r\n                ref={ref => _getUpdateBtnRef(ref)}\r\n            />\r\n        </Form>\r\n    )\r\n})\r\n\r\nconst EditUserForm = ({\r\n    record,\r\n    updateUser,\r\n    _getUpdateBtnRef,\r\n    _getData,\r\n    _toggleModal,\r\n}) => (\r\n    <CustomForm\r\n        record={record}\r\n        updateUser={updateUser}\r\n        _getUpdateBtnRef={_getUpdateBtnRef}\r\n        _getData={_getData}\r\n        _toggleModal={_toggleModal}\r\n    />\r\n)\r\n\r\nexport default EditUserForm\r\n","import { connect } from 'react-redux'\r\n\r\nimport EditUserForm from '../components/EditUserForm'\r\n\r\nimport { updateUser } from '../store/users/actions'\r\n\r\nconst mapDispatchToProps = {\r\n    updateUser,\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(EditUserForm)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Button, Divider, Modal, Popconfirm, Input, Icon } from 'antd'\r\nimport UserFormContainer from '../containers/UserFormContainer'\r\nimport EditUserFormContainer from '../containers/EditUserFormContainer'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst TableComponent = ({\r\n    users,\r\n    deleteUser,\r\n    fetchUsers,\r\n    getTotal,\r\n    total,\r\n    loading,\r\n}) => {\r\n    const [visible, _setVisible] = useState(false),\r\n        [showEdit, _setShowEdit] = useState(false),\r\n        [submitBtnRef, _setSubmitBtnRef] = useState({}),\r\n        [updateBtnRef, _setUpdateBtnRef] = useState({}),\r\n        [searchInputRef, _setSearchInputRef] = useState({}),\r\n        [record, _setRecord] = useState({}),\r\n        _getColumnSearchProps = dataIndex => ({\r\n            filterDropdown: ({\r\n                setSelectedKeys,\r\n                selectedKeys,\r\n                confirm,\r\n                clearFilters,\r\n            }) => (\r\n                <div className=\"search-input-container\">\r\n                    <Input\r\n                        ref={node => _setSearchInputRef(node)}\r\n                        placeholder={`Search ${dataIndex}`}\r\n                        value={selectedKeys[0]}\r\n                        onChange={e =>\r\n                            setSelectedKeys(\r\n                                e.target.value ? [e.target.value] : []\r\n                            )\r\n                        }\r\n                        onPressEnter={() => confirm()}\r\n                        className=\"search-input\"\r\n                    />\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => confirm()}\r\n                        icon=\"search\"\r\n                        size=\"small\"\r\n                        className=\"search-input-confirm-btn\"\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => clearFilters()}\r\n                        size=\"small\"\r\n                        className=\"search-input-reset-btn\"\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                </div>\r\n            ),\r\n            filterIcon: filtered => (\r\n                <Icon\r\n                    type=\"search\"\r\n                    style={{ color: filtered ? '#1890ff' : undefined }}\r\n                />\r\n            ),\r\n            onFilter: (value, record) =>\r\n                record[dataIndex]\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .includes(value.toLowerCase()),\r\n            onFilterDropdownVisibleChange: visible => {\r\n                if (visible) {\r\n                    setTimeout(() => searchInputRef.select())\r\n                }\r\n            },\r\n        }),\r\n        columns = [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                ..._getColumnSearchProps('name'),\r\n            },\r\n            {\r\n                title: 'Email',\r\n                dataIndex: 'email',\r\n                ..._getColumnSearchProps('email'),\r\n            },\r\n            {\r\n                title: 'Actions',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <Button\r\n                            onClick={() => {\r\n                                _setRecord(record)\r\n                                _setShowEdit(true)\r\n                                _toggleModal()\r\n                            }}\r\n                        >\r\n                            Edit\r\n                        </Button>\r\n                        <Divider type=\"vertical\" />\r\n                        <Popconfirm\r\n                            title=\"Are you sure delete this user?\"\r\n                            onConfirm={() => _deleteUser(record)}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button type=\"danger\">Del</Button>\r\n                        </Popconfirm>\r\n                    </span>\r\n                ),\r\n            },\r\n        ],\r\n        _toggleModal = () => _setVisible(!visible),\r\n        _getSubmitBtnRef = ref => _setSubmitBtnRef(ref),\r\n        _getUpdateBtnRef = ref => _setUpdateBtnRef(ref),\r\n        _handleSubmit = () => submitBtnRef.buttonNode.click(),\r\n        _handleUpdate = () => updateBtnRef.buttonNode.click(),\r\n        _getData = () => {\r\n            getTotal()\r\n                .then(() => fetchUsers())\r\n                .catch(err => toast.error(err))\r\n        },\r\n        _deleteUser = record => {\r\n            deleteUser(record.objectId)\r\n                .then(() => {\r\n                    toast.success('User was successfully Deleted!')\r\n                    _getData()\r\n                })\r\n                .catch(err => toast.error(err))\r\n        }\r\n\r\n    useEffect(() => {\r\n        _getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"table\">\r\n            <Table\r\n                columns={columns}\r\n                dataSource={users}\r\n                loading={loading}\r\n                pagination={{ total, pageSize: 4 }}\r\n            />\r\n\r\n            <Button\r\n                className=\"flexed-centered\"\r\n                onClick={() => {\r\n                    _setShowEdit(false)\r\n                    _toggleModal()\r\n                }}\r\n            >\r\n                Add New User\r\n            </Button>\r\n\r\n            <Modal\r\n                title={showEdit ? 'Edit User' : 'Add User'}\r\n                visible={visible}\r\n                onCancel={_toggleModal}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={_toggleModal}>\r\n                        Cancel\r\n                    </Button>,\r\n                    <Button\r\n                        key=\"submit\"\r\n                        type=\"primary\"\r\n                        loading={loading}\r\n                        onClick={showEdit ? _handleUpdate : _handleSubmit}\r\n                    >\r\n                        {showEdit ? 'Update' : 'Submit'}\r\n                    </Button>,\r\n                ]}\r\n            >\r\n                {showEdit ? (\r\n                    <EditUserFormContainer\r\n                        _getUpdateBtnRef={_getUpdateBtnRef}\r\n                        _toggleModal={_toggleModal}\r\n                        _getData={_getData}\r\n                        record={record}\r\n                    />\r\n                ) : (\r\n                    <UserFormContainer\r\n                        _getSubmitBtnRef={_getSubmitBtnRef}\r\n                        _toggleModal={_toggleModal}\r\n                        _getData={_getData}\r\n                    />\r\n                )}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableComponent\r\n","import { connect } from 'react-redux'\r\n\r\nimport TableComponent from '../components/TableComponent'\r\n\r\nimport { deleteUser, fetchUsers, getTotal } from '../store/users/actions'\r\n\r\nconst mapStateToProps = ({ users }) => ({\r\n    users: users.users,\r\n    total: users.total,\r\n    loading: users.loading,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    deleteUser,\r\n    fetchUsers,\r\n    getTotal,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TableComponent)\r\n","import React from 'react'\r\nimport TableContainer from '../containers/TableContainer'\r\n\r\nconst TablePage = () => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <TableContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TablePage\r\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport TablePage from './TablePage'\nimport './App.css'\n\nconst App = () => (\n    <div className=\"App\">\n        <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>PERX</title>\n        </Helmet>\n        <TablePage />\n    </div>\n)\n\nexport default App\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { store } from './store'\r\n\r\nimport App from './pages/App'\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}