{"version":3,"sources":["store/users/reducer.js","store/users/actionTypes.js","store/index.js","components/Notification.js","components/UserForm.js","containers/UserFormContainer.js","store/users/actions.js","components/EditUserForm.js","containers/EditUserFormContainer.js","components/Search.js","components/TableComponent.js","containers/TableContainer.js","pages/TablePage.js","pages/App.js","index.js"],"names":["initialState","users","total","loading","error","pageSize","usersHandler","_usersHandler","Object","defineProperty","state","objectSpread","_ref","map","user","key","uuid","_ref2","store","createStore","combineReducers","arguments","length","undefined","action","type","applyMiddleware","thunk","Notification","data","notification","message","description","concat","success","Form","create","form","addNewUser","_getSubmitBtnRef","_toggleModal","_getData","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","react_default","a","createElement","es_form","assign","onSubmit","e","preventDefault","validateFields","err","formData","then","catch","Item","label","rules","required","input","Password","es_button","htmlType","className","ref","mapDispatchToProps","userData","_ref4","asyncToGenerator","regenerator_default","mark","_callee4","dispatch","wrap","_context4","prev","next","axios","post","headers","Content-Type","sent","abrupt","stop","_x5","apply","this","connect","UserForm","CustomForm","mapPropsToFields","props","_props$record","record","name","email","createFormField","value","updateUser","_getUpdateBtnRef","EditUserForm","_ref3","_callee3","password","objectId","_context3","put","_x4","Search","handleSearch","getData","dataIndex","_useState","useState","_useState2","slicedToArray","searchRef","setSearchRef","placeholder","onSearch","phrase","c","onClick","icon","size","TableComponent","deleteUser","fetchUsers","getTotal","visible","_setVisible","_useState3","_useState4","showEdit","_setShowEdit","_useState5","_useState6","submitBtnRef","_setSubmitBtnRef","_useState7","_useState8","updateBtnRef","_setUpdateBtnRef","_useState9","_useState10","_setRecord","_useState11","_useState12","pageNumber","setPageNumber","_handleSearch","_getColumnSearchProps","filterDropdown","components_Search","filterIcon","filtered","style","color","columns","title","render","text","divider","popconfirm","onConfirm","_deleteUser","okText","cancelText","useEffect","table","dataSource","pagination","onChange","current","modal","onCancel","footer","buttonNode","click","EditUserFormContainer","UserFormContainer","id","_ref5","_callee5","_context5","delete","_x6","pageNum","search","_callee","getState","_getState","offset","where","_context","get","params","res","_x","_x2","_callee2","_context2","_x3","_ref$users","TablePage","TableContainer","App","Helmet","charSet","pages_TablePage","es","src_pages_App","document","getElementById"],"mappings":"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","file":"static/js/main.8426a199.chunk.js","sourcesContent":["import * as ActionTypes from './actionTypes'\r\nimport uuid from 'uuid'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    total: 0,\r\n    loading: false,\r\n    error: false,\r\n    pageSize: 4\r\n}\r\n\r\nconst usersHandler = {\r\n    [ActionTypes.FETCH_USERS_REQUEST](state) {\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.FETCH_USERS_SUCCESS](state, { users }) {\r\n        return {\r\n            ...state,\r\n            users: users.map(user => {\r\n                return { ...user, key: uuid() }\r\n            }),\r\n            loading: false,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.FETCH_USERS_FAILURE](state) {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: true,\r\n        }\r\n    },\r\n    [ActionTypes.GET_TOTAL_REQUEST](state) {\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.GET_TOTAL_SUCCESS](state, { total }) {\r\n        return {\r\n            ...state,\r\n            total,\r\n            loading: false,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.GET_TOTAL_FAILURE](state) {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: true,\r\n        }\r\n    },\r\n    [ActionTypes.ADD_NEW_USER_REQUEST](state) {\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.ADD_NEW_USER_SUCCESS](state) {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.ADD_NEW_USER_FAILURE](state) {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: true,\r\n        }\r\n    },\r\n    [ActionTypes.UPDATE_USER_REQUEST](state) {\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.UPDATE_USER_SUCCESS](state) {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.UPDATE_USER_FAILURE](state) {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: true,\r\n        }\r\n    },\r\n    [ActionTypes.DELETE_USER_REQUEST](state) {\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.DELETE_USER_SUCCESS](state) {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: false,\r\n        }\r\n    },\r\n    [ActionTypes.DELETE_USER_FAILURE](state) {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: true,\r\n        }\r\n    },\r\n}\r\n\r\nexport default (state = initialState, action) =>\r\n    usersHandler[action.type] ? usersHandler[action.type](state, action) : state\r\n","export const FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST'\r\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS'\r\nexport const FETCH_USERS_FAILURE = 'FETCH_USERS_FAILURE'\r\n\r\nexport const GET_TOTAL_REQUEST = 'GET_TOTAL_REQUEST'\r\nexport const GET_TOTAL_SUCCESS = 'GET_TOTAL_SUCCESS'\r\nexport const GET_TOTAL_FAILURE = 'GET_TOTAL_FAILURE'\r\n\r\nexport const ADD_NEW_USER_REQUEST = 'ADD_NEW_USER_REQUEST'\r\nexport const ADD_NEW_USER_SUCCESS = 'ADD_NEW_USER_SUCCESS'\r\nexport const ADD_NEW_USER_FAILURE = 'ADD_NEW_USER_FAILURE'\r\n\r\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST'\r\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\r\nexport const UPDATE_USER_FAILURE = 'UPDATE_USER_FAILURE'\r\n\r\nexport const DELETE_USER_REQUEST = 'DELETE_USER_REQUEST'\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS'\r\nexport const DELETE_USER_FAILURE = 'DELETE_USER_FAILURE'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport users from './users/reducer'\r\n\r\nexport const store = createStore(\r\n    combineReducers({\r\n        users,\r\n    }),\r\n    applyMiddleware(thunk)\r\n)\r\n","import { notification } from 'antd'\r\n\r\nconst Notification = {\r\n    error: data =>\r\n        notification.error({\r\n            message: 'Error',\r\n            description: `${data}`,\r\n        }),\r\n    success: data =>\r\n        notification.success({\r\n            message: 'Success',\r\n            description: `${data}`,\r\n        }),\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\nimport { Form, Button, Input } from 'antd'\r\nimport Notification from './Notification'\r\nimport uuid from 'uuid'\r\n\r\nconst UserForm = ({\r\n    form,\r\n    addNewUser,\r\n    _getSubmitBtnRef,\r\n    _toggleModal,\r\n    _getData,\r\n}) => {\r\n    const handleSubmit = e => {\r\n            e.preventDefault()\r\n            form.validateFields((err, formData) => {\r\n                if (!err) {\r\n                    formData.key = uuid()\r\n                    addNewUser(formData)\r\n                        .then(success => {\r\n                            if (!success) {\r\n                                Notification.error('The user is NOT CREATED!')\r\n                                return\r\n                            }\r\n                            _toggleModal()\r\n                            _getData()\r\n                            Notification.success('The user is CREATED!')\r\n                        })\r\n                        .catch(err => Notification.error(err))\r\n                }\r\n            })\r\n        },\r\n        { getFieldDecorator } = form,\r\n        formItemLayout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 14 },\r\n        }\r\n\r\n    return (\r\n        <Form {...formItemLayout} onSubmit={handleSubmit}>\r\n            <Form.Item {...formItemLayout} label=\"Name\">\r\n                {getFieldDecorator('name', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your name',\r\n                            type: 'string',\r\n                        },\r\n                    ],\r\n                })(<Input />)}\r\n            </Form.Item>\r\n            <Form.Item {...formItemLayout} label=\"Email\">\r\n                {getFieldDecorator('email', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input valid email',\r\n                            type: 'email',\r\n                        },\r\n                    ],\r\n                })(<Input />)}\r\n            </Form.Item>\r\n            <Form.Item {...formItemLayout} label=\"Password\">\r\n                {getFieldDecorator('password', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your password',\r\n                        },\r\n                    ],\r\n                })(<Input.Password />)}\r\n            </Form.Item>\r\n\r\n            <Button\r\n                htmlType=\"submit\"\r\n                className=\"hidden\"\r\n                ref={ref => _getSubmitBtnRef(ref)}\r\n            />\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Form.create()(UserForm)\r\n","import { connect } from 'react-redux'\r\n\r\nimport { addNewUser } from '../store/users/actions'\r\n\r\nimport UserForm from '../components/UserForm'\r\n\r\nconst mapDispatchToProps = {\r\n    addNewUser,\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(UserForm)\r\n","import axios from 'axios'\r\nimport * as ActionTypes from './actionTypes'\r\n\r\nexport const fetchUsers = (pageNum = 0, search) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    dispatch({\r\n        type: ActionTypes.FETCH_USERS_REQUEST,\r\n    })\r\n\r\n    const {\r\n            users: { pageSize },\r\n        } = getState(),\r\n        offset = pageNum <= 1 ? 0 : pageSize * (pageNum - 1),\r\n        where = search\r\n            ? search.name\r\n                ? `name LIKE '%${search.phrase}%'`\r\n                : `email LIKE '%${search.phrase}%'`\r\n            : null\r\n\r\n    const success = await axios\r\n        .get(\r\n            `https://api.backendless.com/53FB6874-BEE0-9546-FFCA-1F3DEE56BE00/73E38E38-C5C9-45B2-FFB5-D05A6E16A600/data/Users`,\r\n            {\r\n                params: {\r\n                    pageSize,\r\n                    offset,\r\n                    where,\r\n                },\r\n            }\r\n        )\r\n        .then(res => {\r\n            dispatch({\r\n                type: ActionTypes.FETCH_USERS_SUCCESS,\r\n                users: res.data,\r\n            })\r\n            if (search) {\r\n                dispatch({\r\n                    type: ActionTypes.GET_TOTAL_SUCCESS,\r\n                    total: res.data.length,\r\n                })\r\n            }\r\n            return true\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ActionTypes.FETCH_USERS_FAILURE,\r\n            })\r\n            return false\r\n        })\r\n    return await success\r\n}\r\n\r\nexport const getTotal = () => async dispatch => {\r\n    dispatch({\r\n        type: ActionTypes.GET_TOTAL_REQUEST,\r\n    })\r\n\r\n    const success = await axios\r\n        .get(\r\n            `https://api.backendless.com/53FB6874-BEE0-9546-FFCA-1F3DEE56BE00/73E38E38-C5C9-45B2-FFB5-D05A6E16A600/data/Users/count`\r\n        )\r\n        .then(res => {\r\n            dispatch({\r\n                type: ActionTypes.GET_TOTAL_SUCCESS,\r\n                total: res.data,\r\n            })\r\n            return true\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ActionTypes.GET_TOTAL_FAILURE,\r\n            })\r\n            return false\r\n        })\r\n    return await success\r\n}\r\n\r\nexport const updateUser = data => async dispatch => {\r\n    dispatch({\r\n        type: ActionTypes.UPDATE_USER_REQUEST,\r\n    })\r\n\r\n    const { name, email, password, objectId } = data,\r\n        success = await axios\r\n            .put(\r\n                `https://api.backendless.com/53FB6874-BEE0-9546-FFCA-1F3DEE56BE00/73E38E38-C5C9-45B2-FFB5-D05A6E16A600/data/Users/${objectId}`,\r\n                {\r\n                    name,\r\n                    email,\r\n                    password,\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            )\r\n            .then(() => {\r\n                dispatch({\r\n                    type: ActionTypes.UPDATE_USER_SUCCESS,\r\n                })\r\n                return true\r\n            })\r\n            .catch(() => {\r\n                dispatch({\r\n                    type: ActionTypes.UPDATE_USER_FAILURE,\r\n                })\r\n                return false\r\n            })\r\n    return await success\r\n}\r\n\r\nexport const addNewUser = userData => async dispatch => {\r\n    dispatch({\r\n        type: ActionTypes.ADD_NEW_USER_REQUEST,\r\n    })\r\n\r\n    const success = await axios\r\n        .post(\r\n            `https://api.backendless.com/53FB6874-BEE0-9546-FFCA-1F3DEE56BE00/73E38E38-C5C9-45B2-FFB5-D05A6E16A600/data/Users`,\r\n            {\r\n                ...userData,\r\n            },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n        )\r\n        .then(() => {\r\n            dispatch({\r\n                type: ActionTypes.ADD_NEW_USER_SUCCESS,\r\n            })\r\n            return true\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ActionTypes.ADD_NEW_USER_FAILURE,\r\n            })\r\n            return false\r\n        })\r\n    return await success\r\n}\r\n\r\nexport const deleteUser = id => async dispatch => {\r\n    dispatch({\r\n        type: ActionTypes.DELETE_USER_REQUEST,\r\n    })\r\n\r\n    const success = await axios\r\n        .delete(\r\n            `https://api.backendless.com/53FB6874-BEE0-9546-FFCA-1F3DEE56BE00/73E38E38-C5C9-45B2-FFB5-D05A6E16A600/data/Users/${id}`\r\n        )\r\n        .then(() => {\r\n            dispatch({\r\n                type: ActionTypes.DELETE_USER_SUCCESS,\r\n            })\r\n            return true\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ActionTypes.DELETE_USER_FAILURE,\r\n            })\r\n            return false\r\n        })\r\n    return await success\r\n}\r\n","import React from 'react'\r\nimport { Form, Button, Input } from 'antd'\r\nimport Notification from './Notification'\r\n\r\nconst CustomForm = Form.create({\r\n    mapPropsToFields(props) {\r\n        const {\r\n            record: { name, email },\r\n        } = props\r\n        return {\r\n            name: Form.createFormField({\r\n                ...name,\r\n                value: name,\r\n            }),\r\n            email: Form.createFormField({\r\n                ...email,\r\n                value: email,\r\n            }),\r\n        }\r\n    },\r\n})(props => {\r\n    const {\r\n            form,\r\n            updateUser,\r\n            _getUpdateBtnRef,\r\n            _getData,\r\n            _toggleModal,\r\n            record,\r\n        } = props,\r\n        { getFieldDecorator } = form,\r\n        formItemLayout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 14 },\r\n        },\r\n        handleSubmit = e => {\r\n            e.preventDefault()\r\n            form.validateFields((err, formData) => {\r\n                if (!err) {\r\n                    const data = {\r\n                        ...record,\r\n                        ...formData,\r\n                    }\r\n                    updateUser(data)\r\n                        .then(success => {\r\n                            if (!success) {\r\n                                Notification.error('User is NOT UPDATED!')\r\n                                return\r\n                            }\r\n                            _toggleModal()\r\n                            _getData()\r\n                            Notification.success('User is UPDATED!')\r\n                        })\r\n                        .catch(err => Notification.error(err))\r\n                }\r\n            })\r\n        }\r\n    return (\r\n        <Form {...formItemLayout} onSubmit={handleSubmit}>\r\n            <Form.Item {...formItemLayout} label=\"Name\">\r\n                {getFieldDecorator('name', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your name',\r\n                            type: 'string',\r\n                        },\r\n                    ],\r\n                })(<Input />)}\r\n            </Form.Item>\r\n            <Form.Item {...formItemLayout} label=\"Email\">\r\n                {getFieldDecorator('email', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input valid email',\r\n                            type: 'email',\r\n                        },\r\n                    ],\r\n                })(<Input />)}\r\n            </Form.Item>\r\n            <Form.Item {...formItemLayout} label=\"Password\">\r\n                {getFieldDecorator('password', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your password',\r\n                        },\r\n                    ],\r\n                })(<Input.Password />)}\r\n            </Form.Item>\r\n\r\n            <Button\r\n                htmlType=\"submit\"\r\n                className=\"hidden\"\r\n                ref={ref => _getUpdateBtnRef(ref)}\r\n            />\r\n        </Form>\r\n    )\r\n})\r\n\r\nconst EditUserForm = ({\r\n    record,\r\n    updateUser,\r\n    _getUpdateBtnRef,\r\n    _getData,\r\n    _toggleModal,\r\n}) => (\r\n    <CustomForm\r\n        record={record}\r\n        updateUser={updateUser}\r\n        _getUpdateBtnRef={_getUpdateBtnRef}\r\n        _getData={_getData}\r\n        _toggleModal={_toggleModal}\r\n    />\r\n)\r\n\r\nexport default EditUserForm\r\n","import { connect } from 'react-redux'\r\n\r\nimport EditUserForm from '../components/EditUserForm'\r\n\r\nimport { updateUser } from '../store/users/actions'\r\n\r\nconst mapStateToProps = ({ users: { error } }) => ({\r\n    error,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    updateUser,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EditUserForm)\r\n","import React, { useState } from 'react'\r\nimport { Button, Input } from 'antd'\r\n\r\nconst Search = ({ handleSearch, getData, dataIndex }) => {\r\n    const [searchRef, setSearchRef] = useState({})\r\n    return (\r\n        <div className=\"search-container\">\r\n            <div className=\"search-input-container\">\r\n                <Input.Search\r\n                    placeholder={`Input search ${dataIndex}`}\r\n                    onSearch={phrase => {\r\n                        if (phrase) handleSearch(dataIndex, phrase)\r\n                    }}\r\n                    ref={c => setSearchRef(c)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                        const phrase = searchRef.input.state.value\r\n                        if (phrase) handleSearch(dataIndex, phrase)\r\n                    }}\r\n                    icon=\"search\"\r\n                    size=\"small\"\r\n                    className=\"search-input-confirm-btn\"\r\n                >\r\n                    Search\r\n                </Button>\r\n                <Button\r\n                    onClick={() => {\r\n                        searchRef.input.state.value = ''\r\n                        getData()\r\n                    }}\r\n                    size=\"small\"\r\n                    className=\"search-input-reset-btn\"\r\n                >\r\n                    Reset\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","// @flow\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Table, Button, Divider, Modal, Popconfirm, Icon } from 'antd'\r\nimport UserFormContainer from '../containers/UserFormContainer'\r\nimport EditUserFormContainer from '../containers/EditUserFormContainer'\r\nimport Search from './Search'\r\nimport Notification from './Notification'\r\n\r\nconst TableComponent = ({\r\n    users,\r\n    deleteUser,\r\n    fetchUsers,\r\n    getTotal,\r\n    total,\r\n    pageSize,\r\n    loading,\r\n}) => {\r\n    const [visible, _setVisible] = useState(false),\r\n        [showEdit, _setShowEdit] = useState(false),\r\n        [submitBtnRef, _setSubmitBtnRef] = useState({}),\r\n        [updateBtnRef, _setUpdateBtnRef] = useState({}),\r\n        [record, _setRecord] = useState({}),\r\n        [pageNumber, setPageNumber] = useState(1),\r\n        _handleSearch = (dataIndex, phrase) => {\r\n            const search = {\r\n                    name: dataIndex === 'name',\r\n                    phrase,\r\n                },\r\n                pageNum = 1\r\n            fetchUsers(pageNum, search)\r\n                .then(success => {\r\n                    if (!success)\r\n                        Notification.error(\r\n                            'An error occured while fetching the users'\r\n                        )\r\n                })\r\n                .catch(err => Notification.error(err))\r\n        },\r\n        _getColumnSearchProps = dataIndex => ({\r\n            filterDropdown: () => (\r\n                <Search\r\n                    handleSearch={_handleSearch}\r\n                    getData={_getData}\r\n                    dataIndex={dataIndex}\r\n                />\r\n            ),\r\n            filterIcon: filtered => (\r\n                <Icon\r\n                    type=\"search\"\r\n                    style={{ color: filtered ? '#1890ff' : undefined }}\r\n                />\r\n            ),\r\n        }),\r\n        columns = [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                ..._getColumnSearchProps('name'),\r\n            },\r\n            {\r\n                title: 'Email',\r\n                dataIndex: 'email',\r\n                ..._getColumnSearchProps('email'),\r\n            },\r\n            {\r\n                title: 'Actions',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <Button\r\n                            onClick={() => {\r\n                                _setRecord(record)\r\n                                _setShowEdit(true)\r\n                                _toggleModal()\r\n                            }}\r\n                        >\r\n                            Edit\r\n                        </Button>\r\n                        <Divider type=\"vertical\" />\r\n                        <Popconfirm\r\n                            title=\"Are you sure delete this user?\"\r\n                            onConfirm={() => _deleteUser(record)}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button type=\"danger\">Del</Button>\r\n                        </Popconfirm>\r\n                    </span>\r\n                ),\r\n            },\r\n        ],\r\n        _toggleModal = () => _setVisible(!visible),\r\n        _getSubmitBtnRef = ref => _setSubmitBtnRef(ref),\r\n        _getUpdateBtnRef = ref => _setUpdateBtnRef(ref),\r\n        _handleSubmit = () => submitBtnRef.buttonNode.click(),\r\n        _handleUpdate = () => updateBtnRef.buttonNode.click(),\r\n        _getData = () => {\r\n            getTotal()\r\n                .then(success => {\r\n                    if (!success) {\r\n                        Notification.error(\r\n                            'An error occured while fetching the users quantity'\r\n                        )\r\n                        return\r\n                    }\r\n                    fetchUsers(pageNumber)\r\n                })\r\n                .catch(err => Notification.error(err))\r\n        },\r\n        _deleteUser = record => {\r\n            deleteUser(record.objectId)\r\n                .then(success => {\r\n                    if (!success) {\r\n                        Notification.error(\r\n                            'An error occured while deleting the user'\r\n                        )\r\n                        return\r\n                    }\r\n                    Notification.success('User is DELETED!')\r\n                    _getData()\r\n                })\r\n                .catch(err => Notification.error(err))\r\n        },\r\n        _handleChange = ({ current }) => {\r\n            setPageNumber(current)\r\n            fetchUsers(current)\r\n        }\r\n\r\n    useEffect(() => {\r\n        _getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"table\">\r\n            <Table\r\n                columns={columns}\r\n                dataSource={users}\r\n                loading={loading}\r\n                pagination={{ total, pageSize }}\r\n                onChange={_handleChange}\r\n            />\r\n\r\n            <Button\r\n                className=\"flexed-centered\"\r\n                onClick={() => {\r\n                    _setShowEdit(false)\r\n                    _toggleModal()\r\n                }}\r\n            >\r\n                Add New User\r\n            </Button>\r\n\r\n            <Modal\r\n                title={showEdit ? 'Edit User' : 'Add User'}\r\n                visible={visible}\r\n                onCancel={_toggleModal}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={_toggleModal}>\r\n                        Cancel\r\n                    </Button>,\r\n                    <Button\r\n                        key=\"submit\"\r\n                        type=\"primary\"\r\n                        loading={loading}\r\n                        onClick={showEdit ? _handleUpdate : _handleSubmit}\r\n                    >\r\n                        {showEdit ? 'Update' : 'Submit'}\r\n                    </Button>,\r\n                ]}\r\n            >\r\n                {showEdit ? (\r\n                    <EditUserFormContainer\r\n                        _getUpdateBtnRef={_getUpdateBtnRef}\r\n                        _toggleModal={_toggleModal}\r\n                        _getData={_getData}\r\n                        record={record}\r\n                    />\r\n                ) : (\r\n                    <UserFormContainer\r\n                        _getSubmitBtnRef={_getSubmitBtnRef}\r\n                        _toggleModal={_toggleModal}\r\n                        _getData={_getData}\r\n                    />\r\n                )}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableComponent\r\n","import { connect } from 'react-redux'\r\n\r\nimport TableComponent from '../components/TableComponent'\r\n\r\nimport { deleteUser, fetchUsers, getTotal } from '../store/users/actions'\r\n\r\nconst mapStateToProps = ({ users: { users, total, loading, pageSize } }) => ({\r\n    users,\r\n    total,\r\n    pageSize,\r\n    loading,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    deleteUser,\r\n    fetchUsers,\r\n    getTotal,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TableComponent)\r\n","import React from 'react'\r\nimport TableContainer from '../containers/TableContainer'\r\n\r\nconst TablePage = () => (\r\n    <div className=\"wrapper\">\r\n        <TableContainer />\r\n    </div>\r\n)\r\n\r\nexport default TablePage\r\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport TablePage from './TablePage'\nimport './App.css'\n\nconst App = () => (\n    <div className=\"App\">\n        <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>PERX</title>\n        </Helmet>\n        <TablePage />\n    </div>\n)\n\nexport default App\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { store } from './store'\r\n\r\nimport App from './pages/App'\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}